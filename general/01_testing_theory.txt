Testing Theory

- Testing objectives
1) To provide sufficient information to stakeholders regarding the level of quality of the test object
2) To verify whether all specified requirements have been fulfilled (verification)
3) To check whether the test object is complete and if it works as the users and stakeholders expect (validation)
4) To prevent defects by evaluate work products such as requirements, user stories, design, and code
5) To find defects and failures thus reduce the level of risk of inadequate software quality
6) To build confidence in the level of quality of the test object
7) To comply with contractual, legal, or regulatory requirements or standards

- Testing principles
1) Testing shows the presence of defects, not their absence
2) Exhaustive testing is impossible
3) Early testing saves time and money
4) Defects cluster together
5) Beware of pesticide paradox
6) Testing is context dependent
7) Absence-of-errors is a fallacy (validation)

- Testing process and SDLC
-- Monitoring and Control during all testing phases
-- Testing process - Planning - Analysis - Design - Implementation - Execution - Completion
-- SDLC - Planning - Analysis - Design - Development - Integration and Testing - Deployment - Maintenance

- Testing levels
1) Component/Unit/Module/Program testing
2) Component integration testing
3) System integration testing
4) System testing
5) Acceptance testing (User Acceptance Testing and Operational Acceptance Testing)

- Testing types
-- Functional (what the system should do - completeness, correctness, appropriateness)
-- Non-Functional (how well the system behaves - security, compatibility, portability, performance, reliability, robustness, maintainability)
-- Change related (regression and re-test/confirmation testing)

- Testing techniques (test design techniques)
-- White-box (statement, branch, decision, condition, multiple condition, path)
-- Black-box (equivalence partitioning, boundary values analysis, decision table, state transition, use case, pairwise)
-- Experienced based (error guessing, exploratory, checklist-based)
